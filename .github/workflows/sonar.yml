name: Run Sonar on Master Build

on:
  push:
    branches:
      master

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
      # Checkout the current working code base
      - name: Checkout working branch
        uses: actions/checkout@v2

      # Installs the version of java to run Sonar (does not have to match project)
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Installs the correct Node version for the project
      - name: Setup Node.js for use with actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.18.3'

      # Setup the maven build caching (~/.m2/repository directory) to restore from or save to
      - name: Cache project build
        id: cache-build
        uses: actions/cache@v1.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

        # Build only the backend if changes are made to the backend and not frontend
      - name: Build backend with Maven
        run: mvn clean install

        # Setup the Node modules caching (~/.npm directory) to restore from or save to
      - name: Cache node modules
        uses: actions/cache@v1.1.2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Build frontend (includes Node package install)
        run: |
          cd frontend
          npm ci
          npm run build:production

        # Run Sonar Analysis on Frontend
      - name: Setup Sonar Analysis For Frontend
        uses: warchant/setup-sonar-scanner@v3

        # Run Sonar Analysis on Frontend
      - name: Sonar Analysis on Frontend
        run: cd frontend && sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}

        # Run Sonar Analysis on Backend
      - name: Sonar Analysis on Backend
        run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
